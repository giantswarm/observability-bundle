clusterID: ""
organization: ""

apps:
  prometheus-operator-crd:
    appName: prometheus-operator-crd
    chartName: prometheus-operator-crd
    catalog: default
    enabled: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/prometheus-operator-crd
    version: 4.0.0
    # User values can be provided via a ConfigMap or Secret for each individual app
    userConfig: {}
    # a list of extraConfigs for the App,
    # It can be secret or configmap
    # https://github.com/giantswarm/rfc/tree/main/multi-layer-app-config#example
    extraConfigs: []

  prometheus-operator-app:
    appName: prometheus-operator-app
    chartName: prometheus-operator-app
    catalog: default
    dependsOn: prometheus-operator-crd
    enabled: true
    namespace: kube-system
    skipCRDs: true
    # used by renovate
    # repo: giantswarm/prometheus-operator-app
    version: 4.0.1
    userConfig:
      configMap:
        values: |
          prometheus-operator-app:
            defaultRules:
              create: false
            alertmanager:
              enabled: false
            coreDns:
              enabled: false
            grafana:
              enabled: false
            kubeApiServer:
              serviceMonitor:
                relabelings:
                # Add app label.
                - targetLabel: app
                  replacement: kubernetes
                metricRelabelings:
                  # Keep from upstream values (https://github.com/prometheus-community/helm-charts/blob/kube-prometheus-stack-44.4.1/charts/kube-prometheus-stack/values.yaml#L967)
                - action: drop
                  regex: apiserver_request_duration_seconds_bucket;(0.15|0.2|0.3|0.35|0.4|0.45|0.6|0.7|0.8|0.9|1.25|1.5|1.75|2|3|3.5|4|4.5|6|7|8|9|15|25|40|50)
                  sourceLabels:
                  - __name__
                  - le
                # GS addition to reduce cardinality
                - action: drop
                  regex: apiserver_request_slo_duration_seconds_bucket
                  sourceLabels:
                  - __name__
            kubeControllerManager:
              service:
                port: 10257
                targetPort: 10257
                selector:
                  component: kube-controller-manager
              serviceMonitor:
                https: true
                insecureSkipVerify: true
                relabelings:
                # Add app label.
                - targetLabel: app
                  replacement: kube-controller-manager
                # Add node label.
                - sourceLabels:
                  - __meta_kubernetes_pod_node_name
                  targetLabel: node
            kubeEtcd:
              enabled: false
            kubelet:
              enabled: false
            kubeProxy:
              enabled: false
            kubeScheduler:
              service:
                port: 10259
                targetPort: 10259
                selector:
                  component: kube-scheduler
              serviceMonitor:
                https: true
                insecureSkipVerify: true
                relabelings:
                # Add app label.
                - targetLabel: app
                  replacement: kube-scheduler
                # Add node label.
                - sourceLabels:
                  - __meta_kubernetes_pod_node_name
                  targetLabel: node
            prometheusOperator:
              serviceMonitor:
                relabelings:
                # Add app label.
                - sourceLabels:
                  - __meta_kubernetes_pod_label_app_kubernetes_io_name
                  targetLabel: app
                  # Add instance label.
                - sourceLabels:
                  - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                  targetLabel: instance
                # Add node label.
                - sourceLabels:
                  - __meta_kubernetes_pod_node_name
                  targetLabel: node
                # Add team label.
                - sourceLabels:
                  - __meta_kubernetes_pod_label_application_giantswarm_io_team
                  targetLabel: team
            prometheus:
              enabled: false
    # a list of extraConfigs for the App,
    # It can be secret or configmap
    # https://github.com/giantswarm/rfc/tree/main/multi-layer-app-config#example
    extraConfigs: []

  prometheus-agent:
    appName: prometheus-agent
    chartName: prometheus-agent
    catalog: default
    dependsOn: prometheus-operator-crd
    enabled: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/prometheus-agent-app
    version: 0.3.0
    # User values can be provided via a ConfigMap or Secret for each individual app
    # using the structure shown below.
    userConfig:
      configMap:
        values: |
          prometheus-agent:
            serviceMonitorNamespaceSelector: {}
            serviceMonitorSelector:
              matchExpressions:
                - key: "application.giantswarm.io/team"
                  operator: "Exists"
            podMonitorNamespaceSelector: {}
            podMonitorSelector:
              matchExpressions:
                - key: "application.giantswarm.io/team"
                  operator: "Exists"
            serviceMonitor:
              enabled: true
              relabelings:
              # Add app label.
              - sourceLabels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_name
                targetLabel: app
              # Add instance label.
              - sourceLabels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                targetLabel: instance
              # Add node label.
              - sourceLabels:
                - __meta_kubernetes_pod_node_name
                targetLabel: node
              # Add team label.
              - sourceLabels:
                - __meta_kubernetes_pod_label_application_giantswarm_io_team
                targetLabel: team
    # a list of extraConfigs for the App,
    # It can be secret or configmap
    # https://github.com/giantswarm/rfc/tree/main/multi-layer-app-config#example
    extraConfigs: {}

  promtail-app:
    appName: promtail-app
    chartName: promtail
    catalog: giantswarm
    enabled: false
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/promtail-app
    version: 1.0.2
    # User values can be provided via a ConfigMap or Secret for each individual app
    userConfig: {}
    # a list of extraConfigs for the App,
    # It can be secret or configmap
    # https://github.com/giantswarm/rfc/tree/main/multi-layer-app-config#example
    extraConfigs:
      - kind: secret
        name: "{{ $.Values.clusterID }}-logging-secret"
        namespace: "{{ $.Release.Namespace }}"
      - kind: configMap
        name: "{{ $.Values.clusterID }}-logging-config"
        namespace: "{{ $.Release.Namespace }}"
