{{- range $key, $value := .Values.apps }}
{{- $appName := include "app.name" (dict "app" .appName "cluster" $.Values.clusterID "ns" $.Release.Namespace) }}
{{- if and .enabled $appName }}
---
apiVersion: application.giantswarm.io/v1alpha1
kind: App
metadata:
  {{- if .dependsOn }}
  annotations:
    {{- if hasPrefix "org-" $.Release.Namespace }}
    # App is deployed in the org- namespace so the secret name is prefixed by the cluster-id
    app-operator.giantswarm.io/depends-on: {{ printf "%s-%s" $.Values.clusterID .dependsOn -}}
    {{- else }}
    # App is deployed in the cluster-id namespace so prefix is unneeded
    app-operator.giantswarm.io/depends-on: {{ .dependsOn -}}
    {{- end }}
  {{- end }}
  labels:
    {{- include "labels.common" $ | nindent 4 }}
  name: {{ $appName }}
  namespace: {{ $.Release.Namespace }}
spec:
  catalog: {{ .catalog }}
  ## Vintage MCs do not have this CM
  {{- if ne $.Release.Namespace "giantswarm" }}
  config:
    configMap:
      name: {{ $.Values.clusterID }}-cluster-values
      namespace: {{ $.Release.Namespace }}
  {{- end }}
  install:
    skipCRDs: {{ .skipCRDs | default false }}
    timeout: {{ .timeout | default "10m" }}
  upgrade: 
    timeout: {{ .timeout | default "10m" }}
  kubeConfig:
    ## Vintage MCs do not have a kubeconfig secret
    {{- if eq $.Release.Namespace "giantswarm" }}
    inCluster: true
    {{- else }}
    context:
      name: {{ $.Values.clusterID }}-admin@{{ $.Values.clusterID }}
    inCluster: false
    secret:
      name: {{ $.Values.clusterID }}-kubeconfig
      namespace: {{ $.Release.Namespace}}
    {{- end }}
  name: {{ .chartName }}
  namespace: {{ .namespace }}
  version: {{ .version }}
  {{- if .extraConfigs }}
  extraConfigs:
    {{- range $extraConfig := .extraConfigs }}
    - kind: {{ $extraConfig.kind }}
      name: {{ tpl $extraConfig.name $ }}
      namespace: {{ tpl $extraConfig.namespace $ }}
      {{- if $extraConfig.priority }}
      priority: {{ $extraConfig.priority }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- if $.Values.userConfig }}
  {{- with (get $.Values.userConfig $key) }}
  {{- if or .configMap .secret }}
  userConfig:
    {{- if .configMap }}
    configMap:
      name: {{ $appName }}-user-values
      namespace: {{ $.Release.Namespace }}
    {{- end }}
    {{- if .secret }}
    secret:
      name: {{ $appName }}-user-secrets
      namespace: {{ $.Release.Namespace }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
{{- end }}

{{- if $.Values.userConfig }}
{{- with (get $.Values.userConfig $key) }}
{{- if ((.configMap).values) }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "labels.common" $ | nindent 4 }}
  name: {{ $appName }}-user-values
  namespace: {{ $.Release.Namespace }}
data:
  values: |
  {{- (tpl (.configMap.values | toYaml | toString) $) | nindent 4 }}
{{- end }}
{{- if ((.secret).values) }}
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    {{- include "labels.common" $ | nindent 4 }}
  name: {{ $appName }}-user-secrets
  namespace: {{ $.Release.Namespace }}
stringData:
  values: |
  {{- (tpl (.secret.values | toYaml | toString) $) | nindent 4 }}
{{- end }}
{{- end }}
{{- end }}
{{- end -}}
