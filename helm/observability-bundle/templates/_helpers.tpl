{{/* vim: set filetype=mustache: */}}
{{/*
Expand the name of the chart.
*/}}
{{- define "name" -}}
{{- .Chart.Name | trunc 63 | trimSuffix "-" -}}
{{- end -}}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" -}}
{{- end -}}

{{/*
When apps are created in the org namespace add a cluster prefix.
*/}}
{{- define "app.name" -}}
{{/*
for capi MCs and WCs this will be clusterId-appName
*/}}
{{- if hasPrefix "org-" .ns -}}
{{- printf "%s-%s" .cluster .app -}}
{{- else -}}
{{/*
for vintage MCs and WCs this will just be .app
*/}}
{{- .app -}}
{{- end -}}
{{- end -}}

{{/*
Common labels
*/}}
{{- define "labels.common" -}}
app.kubernetes.io/instance: {{ .Release.Name | quote }}
app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
app.kubernetes.io/part-of: {{ include "name" . | quote }}
app.kubernetes.io/version: {{ .Chart.Version | quote }}
giantswarm.io/cluster: {{ .Values.clusterID | quote }}
giantswarm.io/managed-by: {{ .Release.Name | quote }}
giantswarm.io/organization: {{ .Values.organization | quote }}
giantswarm.io/service-type: managed
application.giantswarm.io/team: {{ index .Chart.Annotations "application.giantswarm.io/team" | quote }}
helm.sh/chart: {{ include "chart" . | quote }}
{{- end -}}

{{- define "ksm.defaultCustomResources" -}}
{{- if eq (include "internal.isManagementCluster" $) "true" }}
flux_kustomization_v1: true
flux_helmrelease_v2beta1: true
flux_gitrepository_v1: true
flux_bucket_v1beta2: true
flux_helmrepository_v1beta1: true
flux_helmchart_v1beta2: true
flux_ocirepository_v1beta2: true
flux_alert_v1beta2: true
flux_provider_v1beta2: true
flux_receiver_v1: true
flux_imagerepository_v1beta2: true
flux_imagepolicy_v1beta2: true
flux_imageupdateautomation_v1beta1: true
capi_machinehealthcheck_v1beta1: true
capi_machinedeployment_v1beta1: true
capi_machine_v1beta1: true
capi_cluster_v1beta1: true
capi_kubeadmcontrolplane_v1beta1: true
capi_kubeadmconfig_v1beta1: true
capi_machineset_v1beta1: true
capi_machinepool_v1beta1: true
  {{- if eq $.Values.provider "capz" }}
capi_azurecluster_v1beta1: true
capi_azuremachine_v1beta1: true
capi_azuremachinepool_v1beta1: true
capi_azuremachinepoolmachine_v1beta1: true
  {{- else if eq $.Values.provider "cloud-director" }}
capi_vcdcluster_v1beta2: true
capi_vcdmachine_v1beta2: true
  {{- else if eq $.Values.provider "vsphere" }}
capi_vspherecluster_v1beta1: true
capi_vspheremachine_v1beta1: true
capi_vspherevm_v1beta1: true
  {{- end -}}
{{- end -}}
{{- end -}}

{{/*
Since the Helm values merging won't concatenate nested lists, we need to do it manually.
This helper will merge the KSM custom resources configuration defined in the release values with the ones in the ksm-configuration folder.
*/}}
{{- define "ksm.customResources" -}}
{{- $ksmCustomResourcesRbac := list -}}
{{- $ksmCustomResourcesSpec := list -}}
{{/*The user provided ksm custom resources will take preference over the default ones generated by the chart*/}}
{{- range $component, $enabled := mergeOverwrite (include "ksm.defaultCustomResources" $ | fromYaml) $.Values.kubeStateMetricsCustomResources -}}
  {{- if and $enabled ($.Files.Get (printf "ksm-configurations/%s.yaml" $component)) -}}
    {{- $componentConfig := tpl ($.Files.Get (printf "ksm-configurations/%s.yaml" $component)) $ | fromYaml -}}
    {{- $ksmCustomResourcesRbac = concat $ksmCustomResourcesRbac $componentConfig.rbac -}}
    {{- $ksmCustomResourcesSpec = concat $ksmCustomResourcesSpec $componentConfig.resources -}}
  {{- end -}}
{{- end -}}

{{- $ksmUserConfig := default (dict) (index (default (dict) (index (default (dict) ((($.Values.userConfig).kubePrometheusStack).configMap).values) "kube-prometheus-stack")) "kube-state-metrics") -}}

{{- if gt (len $ksmCustomResourcesSpec) 0 -}}
kube-prometheus-stack:
  kube-state-metrics:
    rbac:
      extraRules:
      {{- concat (default (list) ((($ksmUserConfig).rbac).extraRules)) $ksmCustomResourcesRbac | toYaml | nindent 8 }}
    customResourceState:
      enabled: true
      config:
        spec:
          resources:
          {{- concat (default (list) ((((($ksmUserConfig).customResourceState).config).spec).resources)) $ksmCustomResourcesSpec | toYaml | nindent 12 }}
{{- end -}}
{{- end -}}

{{/*
  internal.isManagementCluster is a public named template that returns true if the cluster is a management cluster, otherwise
  it returns false.
*/}}
{{- define "internal.isManagementCluster" -}}
{{- if eq $.Values.managementCluster $.Values.clusterID -}}
  {{- print "true" -}}
{{- else -}}
  {{- print "false" -}}
{{- end -}}
{{- end -}}
